version: "3.8"

services:
  inventory_service:
    build:
      context: ./src/inventory
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      SPRING_PROFILES_ACTIVE: debug
      LOGGING_LEVEL_ROOT: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: DEBUG  
      ORDERS_BASE_URL: http://orders_service:8080
      ENV: local     
  #   environment:
  #      spring.datasource.url:jdbc:postgresql: //postgres:5432/inventorydb
  #      spring.datasource.username: postgres
  #      spring.datasource.password: postgres
  #      spring.datasource.driver-class-name: org.postgresql.Driver
  #      spring.jpa.hibernate.ddl-auto: update
  #      spring.jpa.database-platform: org.hibernate.dialect.PostgreSQLDialect 
  #   depends_on:
  #     - postgres
  orders_service:
    build:
      context: ./src/orders
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    environment:
      INVENTORY_APP_PORT: 8081
      INVENTORY_BASE_URL: http://inventory_service:8080
      SPRING_PROFILES_ACTIVE: debug
      LOGGING_LEVEL_ROOT: DEBUG 
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: DEBUG
      logging.level.org.apache.coyote.http11: WARN
      jdk.internal.httpclient.debug: WARN
      logging.level.org.springframework.web: TRACE       
    depends_on:
      - inventory_service

  # postgres:
  #   image: postgres:16
  #   restart: always
  #   environment:
  #     POSTGRES_DB: inventorydb
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   ports:
  #     - "5432:5432"
    # environment:
    #   SPRING_DATASOURCE_URL: jdbc:oracle:thin:@oracle-db:1521/XEPDB1
    #   SPRING_DATASOURCE_USERNAME: system
    #   SPRING_DATASOURCE_PASSWORD: oracle
    # depends_on:
    #   - oracle-db  

  # oracle-db:
  #   image: gvenzl/oracle-xe:21-slim
  #   ports:
  #     - "1521:1521"
  #   environment:
  #     ORACLE_PASSWORD: oracle
  #     APP_USER: user
  #     APP_USER_PASSWORD: password          
    # environment:
    #   SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/userdb
    #   SPRING_DATASOURCE_USERNAME: user
    #   SPRING_DATASOURCE_PASSWORD: password
    # depends_on:
    #   - postgres

  # service-order:
  #   build:
  #     context: ./src/service-order
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8082:8080"
  #   environment:
  #     SPRING_DATA_CASSANDRA_CONTACT_POINTS: cassandra
  #     SPRING_DATA_CASSANDRA_KEYSPACE_NAME: orderdb
  #     KAFKA_BOOTSTRAP_SERVERS: kafka:9092
  #   depends_on:
  #     - cassandra
  #     - kafka

  # service-inventory:
  #   build:
  #     context: ./src/service-inventory
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8083:8080"
  #   environment:
  #     KAFKA_BOOTSTRAP_SERVERS: kafka:9092
  #   depends_on:
  #     - kafka

  # postgres:
  #   image: postgres:latest
  #   environment:
  #     POSTGRES_DB: userdb
  #     POSTGRES_USER: user
  #     POSTGRES_PASSWORD: password
  #   ports:
  #     - "5432:5432"

  # cassandra:
  #   image: cassandra:latest
  #   ports:
  #     - "9042:9042"

  # kafka:
  #   image: wurstmeister/kafka:latest
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #   ports:
  #     - "9094:9094"
  #   depends_on:
  #     - zookeeper

  # zookeeper:
  #   image: wurstmeister/zookeeper:latest
  #   ports:
  #     - "2181:2181"